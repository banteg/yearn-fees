--- sources/Vault_v0.3.5.vy	2022-06-29 16:37:58.000000000 +0400
+++ sources/Vault_v0.3.5_fees.vy	2022-07-06 05:10:47.000000000 +0400
@@ -199,6 +199,14 @@
     strategy: indexed(address) # Address of the strategy that is added to the withdrawal queue
 
 
+event Fees:
+    gain: uint256
+    duration: uint256
+    management_fee: uint256
+    performance_fee: uint256
+    strategist_fee: uint256
+
+
 # NOTE: Track the total for overhead targeting purposes
 strategies: public(HashMap[address, StrategyParams])
 MAXIMUM_STRATEGIES: constant(uint256) = 20
@@ -1573,11 +1581,12 @@
     # NOTE: In effect, this reduces overall share price by the combined fee
     # NOTE: may throw if Vault.totalAssets() > 1e64, or not called for more than a year
     precisionFactor: uint256 = self.precisionFactor
+    duration: uint256 = block.timestamp - self.strategies[strategy].lastReport
     management_fee: uint256 = (
         precisionFactor *
         (
             (self.strategies[strategy].totalDebt - Strategy(strategy).delegatedAssets())
-            * (block.timestamp - self.strategies[strategy].lastReport)
+            * duration
             * self.managementFee
         )
         / MAX_BPS
@@ -1631,6 +1640,9 @@
         # NOTE: Governance earns any dust leftover from flooring math above
         if self.balanceOf[self] > 0:
             self._transfer(self, self.rewards, self.balanceOf[self])
+
+    log Fees(gain, duration, management_fee, performance_fee, strategist_fee)
+
     return total_fee
 
 
